{"ast":null,"code":"var _jsxFileName = \"/Users/elvir/frontend/world-of-craft/src/pages/comments/CommentCreateForm.js\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport styles from \"../../styles/CommentCreateEditForm.module.css\";\nimport Avatar from \"../../components/Avatar\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\nfunction CommentCreateForm(props) {\n  const {\n    post,\n    setPost,\n    setComments,\n    profileImage,\n    profile_id\n  } = props;\n  const [content, setContent] = useState(\"\");\n  const handleChange = event => {\n    setContent(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const {\n        data\n      } = await axiosRes.post(\"/comments/\", {\n        content,\n        post\n      });\n      setComments(prevComments => ({\n        ...prevComments,\n        results: [data, ...prevComments.results]\n      }));\n      setPost(prevPost => ({\n        results: [{\n          ...prevPost.results[0],\n          comments_count: prevPost.results[0].comments_count + 1\n        }]\n      }));\n      setContent(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/React.createElement(Form, {\n    className: \"mt-2\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/profiles/${profile_id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: profileImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Control, {\n    className: styles.Form,\n    placeholder: \"my comment...\",\n    as: \"textarea\",\n    value: content,\n    onChange: handleChange,\n    rows: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: `${styles.Button} btn d-block ml-auto`,\n    disabled: !content.trim(),\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"post\"));\n}\nexport default CommentCreateForm;","map":{"version":3,"names":["React","useState","Link","Form","InputGroup","styles","Avatar","axiosRes","CommentCreateForm","props","post","setPost","setComments","profileImage","profile_id","content","setContent","handleChange","event","target","value","handleSubmit","preventDefault","data","prevComments","results","prevPost","comments_count","err","console","log","createElement","className","onSubmit","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Group","to","src","Control","placeholder","as","onChange","rows","Button","disabled","trim","type"],"sources":["/Users/elvir/frontend/world-of-craft/src/pages/comments/CommentCreateForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\n\nimport styles from \"../../styles/CommentCreateEditForm.module.css\";\nimport Avatar from \"../../components/Avatar\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\n\n\nfunction CommentCreateForm(props) {\n  const { post, setPost, setComments, profileImage, profile_id } = props;\n  const [content, setContent] = useState(\"\");\n\n  const handleChange = (event) => {\n    setContent(event.target.value);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await axiosRes.post(\"/comments/\", {\n        content,\n        post,\n      });\n      setComments((prevComments) => ({\n        ...prevComments,\n        results: [data, ...prevComments.results],\n      }));\n      setPost((prevPost) => ({\n        results: [\n          {\n            ...prevPost.results[0],\n            comments_count: prevPost.results[0].comments_count + 1,\n          },\n        ],\n      }));\n      setContent(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <Form className=\"mt-2\" onSubmit={handleSubmit}>\n      <Form.Group>\n        <InputGroup>\n          <Link to={`/profiles/${profile_id}`}>\n            <Avatar src={profileImage} />\n          </Link>\n          <Form.Control\n            className={styles.Form}\n            placeholder=\"my comment...\"\n            as=\"textarea\"\n            value={content}\n            onChange={handleChange}\n            rows={2}\n          />\n        </InputGroup>\n      </Form.Group>\n      <button\n        className={`${styles.Button} btn d-block ml-auto`}\n        disabled={!content.trim()}\n        type=\"submit\"\n      >\n        post\n      </button>\n    </Form>\n  );\n}\n\nexport default CommentCreateForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}