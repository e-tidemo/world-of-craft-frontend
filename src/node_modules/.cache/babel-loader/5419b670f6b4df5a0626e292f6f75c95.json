{"ast":null,"code":"var _jsxFileName = \"/Users/elvir/frontend/world-of-craft/src/contexts/CurrentUserContext.js\";\n// Custom context file to store all the logic to do with our context, \n// such as the current user state and making the API call when the components mount.\n\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nexport const CurrentUserContext = createContext();\nexport const SetCurrentUserContext = createContext();\nexport const useCurrentUser = () => useContext(CurrentUserContext);\nexport const useSetCurrentUser = () => useContext(setCurrentUserContext);\nexport const CurrentUserProvider = ({\n  children\n}) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const handleMount = async () => {\n    try {\n      const {\n        data\n      } = await axios.get('dj-rest-auth/user/');\n      setCurrentUser(data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    handleMount();\n  }, []);\n  return /*#__PURE__*/React.createElement(CurrentUserContext.Provider, {\n    value: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SetCurrentUserContext.Provider, {\n    value: setCurrentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, children));\n};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","axios","CurrentUserContext","SetCurrentUserContext","useCurrentUser","useSetCurrentUser","setCurrentUserContext","CurrentUserProvider","children","currentUser","setCurrentUser","handleMount","data","get","err","console","log","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/elvir/frontend/world-of-craft/src/contexts/CurrentUserContext.js"],"sourcesContent":["// Custom context file to store all the logic to do with our context, \n// such as the current user state and making the API call when the components mount.\n\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport const CurrentUserContext = createContext()\nexport const SetCurrentUserContext = createContext()\n\nexport const useCurrentUser = () => useContext(CurrentUserContext)\nexport const useSetCurrentUser = () => useContext(setCurrentUserContext)\n\nexport const CurrentUserProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState(null)\n\n    const handleMount = async () => {\n        try {\n            const { data } = await axios.get('dj-rest-auth/user/')\n            setCurrentUser(data)\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    useEffect(() => {\n        handleMount()\n    }, []);\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <SetCurrentUserContext.Provider value={setCurrentUser}>\n                {children}\n            </SetCurrentUserContext.Provider>\n        </CurrentUserContext.Provider>\n    )\n}\n"],"mappings":";AAAA;AACA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,kBAAkB,GAAGL,aAAa,CAAC,CAAC;AACjD,OAAO,MAAMM,qBAAqB,GAAGN,aAAa,CAAC,CAAC;AAEpD,OAAO,MAAMO,cAAc,GAAGA,CAAA,KAAMN,UAAU,CAACI,kBAAkB,CAAC;AAClE,OAAO,MAAMG,iBAAiB,GAAGA,CAAA,KAAMP,UAAU,CAACQ,qBAAqB,CAAC;AAExE,OAAO,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACjD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,oBAAoB,CAAC;MACtDH,cAAc,CAACE,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IACpB;EACJ,CAAC;EAEDf,SAAS,CAAC,MAAM;IACZY,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIf,KAAA,CAAAqB,aAAA,CAACf,kBAAkB,CAACgB,QAAQ;IAACC,KAAK,EAAEV,WAAY;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5C7B,KAAA,CAAAqB,aAAA,CAACd,qBAAqB,CAACe,QAAQ;IAACC,KAAK,EAAET,cAAe;IAAAU,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACjDjB,QAC2B,CACP,CAAC;AAEtC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}